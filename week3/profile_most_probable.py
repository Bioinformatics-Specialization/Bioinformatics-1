import argparse
import os
import sys
from pathlib import Path
DATASET_DIR = os.path.join(os.getcwd(), 'datasets')
WEEK2_DIR = str(Path(__file__).resolve().parents[1]) + "/week2"
sys.path.insert(1, WEEK2_DIR)


def parseArgs() :
    parser = argparse.ArgumentParser(
                prog="{}".format(__file__),
                formatter_class=argparse.RawDescriptionHelpFormatter,
                description='''\
                    Given profile matrix, it will provide the most probable k-mer
                    that is likely to be generated by the profile.

                    Input File format :
                    ---------------------------------------
                    ACCTGTTTATTGCCTAAGTTCCGAACAAACCCAATATAGCCCGAGGGCCT
                    5
                    0.2 0.2 0.3 0.2 0.3
                    0.4 0.3 0.1 0.5 0.1
                    0.3 0.3 0.5 0.2 0.4
                    0.1 0.2 0.1 0.1 0.2

                    Expected output :
                    ---------------------------------------
                    CCGAG
                '''
            )
    
    parser.add_argument('-f', '--file', required=False, help="Input file path.")

    return parser.parse_args()

def main() :
    args = parseArgs()
    dataset_path = "{}/{}_dataset.txt".format(DATASET_DIR, os.path.splitext(sys.argv[0])[0])
    
    # Default to the dataset folder, if not provided
    if not args.file :
        args.file = dataset_path
    
    with open(args.file, 'r') as f :
        text = f.readline().strip()
        k = f.readline().strip()
        
        profile_matrix = {}
        for i, row in enumerate(f.readlines()) : 
            if i == 0 :
                profile_matrix["A"] = row.strip()
            elif i == 1 :
                profile_matrix["C"] = row.strip()
            elif i == 2 :
                profile_matrix["G"] = row.strip()
            else :
                profile_matrix["T"] = row.strip()

    print(profile_matrix)

if __name__ == "__main__":
    main()